---
title: Picks - Diacode
description: Tool for building link compilations and distributing them.
body_class: open-source open-source-project picks
---

- stars_and_forks = stars_and_forks_count 'diacode/picks-api'

%header#main_header
  .container
    .welcome
      = image_tag "open-source/picks/icon.png", class: 'icon'
      %h1 Picks
      %h2 Building link compilations right from your chat room
      .meta-data
        %span.fa.fa-star.stars= stars_and_forks[:stars_count]
        %span.fa.fa-code-fork.forks= stars_and_forks[:forks_count]
      = link_to 'https://github.com/diacode/picks', class: 'ghost' do
        %span.fa.fa-github
        Get source code
      .technologies
        Ruby on Rails, HAML, CoffeeScript, SASS, Ember.js, Hubot, Mailchimp

%section.main-section
  .container
    %p
      Since we went remote, our chat became the core communication tool for our team. Besides of discussing work and projects, we naturally started sharing links
      to interesting articles with the rest of the team. Soon we realized there was value on that curated collection of links so it was a good opportunity to share it
      with friends, clients and colleagues.
    %p
      Our goal was to create a workflow where creating a newsletter was as easy as sharing a few links in our chat (we use Slack).

%section.main-section.screenshot-section
  .container
    = image_tag 'open-source/picks/slack.png', class: 'screenshot'

%section.main-section
  .container
    %p
      We created a <strong>Slack bot</strong>, using #{ link_to "Hubot", "https://hubot.github.com/"} which we named
      %em Botarate.
      When we paste a link in our #picks chat room, Botarate sends that link to a Rails API where we fetch the metadata (title and description) of the link.

    %p
      If the preview of the metadata doesn't look nice (not all articles have meta descriptions), we can easily edit the title and description with simple commands
      directly in our chat room:
      %pre !edit title Awesome Article about Rails
    %p
      Once the link looks nice, we just approve it with a single command. As soon as the link is approved it gets automatically shared in our #{ link_to "Twitter account", "https://twitter.com/diacodepicks"}, for those who do not like email newsletters.

    %p
      In addition to our bot, we built an
      %strong Ember.js front-end
      to have a more confortable view of all the links that have been shared.
%section.main-section.screenshot-section
  .container
    = image_tag 'open-source/picks/approved.png', class: 'screenshot'


%section.main-section
  .container
    %p
      Using the front-end we can also check out all the compilations (each newsletter sent) that have been sent so far.
    %p
      As soon as we have shared more than 10 links, <strong>Picks automatically sends a newsletter thanks to the Mailchimp integration</strong>.

%section.main-section.screenshot-section
  .container
    = image_tag 'open-source/picks/compilations.png', class: 'screenshot'


